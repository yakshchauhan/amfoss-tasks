 1: // listit.c
 2: #include <stdio.h>
 3: #include <stdlib.h>
 4: #include <dirent.h>
 5: #include <string.h>
 6: #include <errno.h>
 7:
 8: static int cmp_strptr(const void *a, const void *b){
 9:     const char *const *pa = a;
10:     const char *const *pb = b;
11:     return strcmp(*pa, *pb);
12: }
13:
14: int main(int argc, char **argv){
15:     int show_all = 0;
16:     int one_per_line = 0;
17:     const char *path = ".";
18:
19:     for (int i = 1; i < argc; ++i) {
20:         if (argv[i][0] == '-') {
21:             for (size_t j = 1; argv[i][j]; ++j) {
22:                 if (argv[i][j] == 'a') show_all = 1;
23:                 else if (argv[i][j] == '1') one_per_line = 1;
24:                 else {
25:                     fprintf(stderr, "listit: unknown option -%c\n", argv[i][j]);
26:                     return 2;
27:                 }
28:             }
29:         } else {
30:             path = argv[i];
31:         }
32:     }
33:
34:     DIR *d = opendir(path);
35:     if (!d) {
36:         fprintf(stderr, "listit: cannot open '%s': %s\n", path, strerror(errno));
37:         return 1;
38:     }
39:
40:     size_t cap = 0, n = 0;
41:     char **names = NULL;
42:     struct dirent *ent;
43:     while ((ent = readdir(d)) != NULL) {
44:         if (!show_all && ent->d_name[0] == '.') continue;
45:         if (n == cap) {
46:             cap = cap ? cap * 2 : 64;
47:             names = realloc(names, cap * sizeof(char*));
48:             if (!names) { perror("realloc"); closedir(d); return 1; }
49:         }
50:         names[n++] = strdup(ent->d_name);
51:     }
52:     closedir(d);
53:
54:     qsort(names, n, sizeof(char*), cmp_strptr);
55:
56:     for (size_t i = 0; i < n; ++i) {
57:         if (one_per_line) printf("%s\n", names[i]);
58:         else {
59:             printf("%s", names[i]);
60:             if (i + 1 < n) printf("  ");
61:             else printf("\n");
62:         }
63:         free(names[i]);
64:     }
65:     free(names);
66:     return 0;
67: }
