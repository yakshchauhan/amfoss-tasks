// listit.c
  #include <stdio.h>
  #include <stdlib.h>
  #include <dirent.h>
  #include <string.h>
  #include <errno.h>
  static int cmp_strptr(const void *a, const void *b){
    const char *const *pa = a;
    const char *const *pb = b;
    return strcmp(*pa, *pb);
 }
  int main(int argc, char **argv){
    int show_all = 0;
    int one_per_line = 0;
    const char *path = ".";
    
    for (int i = 1; i < argc; ++i) {
        if (argv[i][0] == '-') {
            for (size_t j = 1; argv[i][j]; ++j) {
                if (argv[i][j] == 'a') show_all = 1;
                else if (argv[i][j] == '1') one_per_line = 1;
                else {
                    fprintf(stderr, "listit: unknown option -%c\n", argv[i][j]);
                    return 2;
                }
            }
        } else {
            path = argv[i];
         }
        }
        DIR *d = opendir(path);
        if (!d) {
            fprintf(stderr, "listit: cannot open '%s': %s\n", path, strerror(errno));
            return 1;
            
            size_t cap = 0, n = 0;
            char **names = NULL;
            struct dirent *ent;
            while ((ent = readdir(d)) != NULL) {
                if (!show_all && ent->d_name[0] == '.') continue;
                if (n == cap) {
                    cap = cap ? cap * 2 : 64;
                    names = realloc(names, cap * sizeof(char*));
                    if (!names) { perror("realloc"); closedir(d); return 1; }
                }
                names[n++] = strdup(ent->d_name);
            }
            closedir(d);
            
            qsort(names, n, sizeof(char*), cmp_strptr);
            for (size_t i = 0; i < n; ++i) {
                if (one_per_line) printf("%s\n", names[i]);
                else {
                    printf("%s", names[i]);
                    if (i + 1 < n) printf("  ");
                     else printf("\n");
                    }
                    free(names[i]);
                }
                free(names);
                return 0;
             }
